{"version":3,"file":"cart-summary-drawer-1c07ee5e.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/cart/CartSummaryDrawer.tsx","webpack://checkout/./packages/core/src/app/cart/EditLink.tsx","webpack://checkout/./packages/core/src/app/coupon/AppliedCoupon.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/AppliedGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconRemove.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemables.tsx","webpack://checkout/./packages/core/src/app/cart/Redeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToCartSummaryProps.ts","webpack://checkout/./packages/core/src/app/cart/mapToRedeemableProps.ts","webpack://checkout/./packages/core/src/app/cart/withRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/order/OrderSummaryModal.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDrawer.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalTrigger.tsx"],"sourcesContent":["import React, { memo, FunctionComponent } from 'react';\n\nimport { withCheckout } from '../checkout';\nimport OrderSummaryDrawer from '../order/OrderSummaryDrawer';\n\nimport mapToCartSummaryProps from './mapToCartSummaryProps';\nimport withRedeemable from './withRedeemable';\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport EditLink from './EditLink';\n\nconst CartSummaryDrawer: FunctionComponent<WithCheckoutCartSummaryProps> = ({\n    cartUrl,\n    ...props\n}) => (\n    withRedeemable(OrderSummaryDrawer)({\n        ...props,\n        cartUrl,\n        headerLink: (\n            <EditLink\n                className=\"modal-header-link cart-modal-link\"\n                url={ cartUrl }\n            />\n        ),\n    })\n);\n\nexport default withCheckout(mapToCartSummaryProps)(memo(CartSummaryDrawer));\n","import React, { memo, FunctionComponent } from 'react';\n\nimport { TranslatedString } from '../locale';\n\nexport interface EditLinkProps {\n    className?: string;\n    url: string;\n}\n\nconst EditLink: FunctionComponent<EditLinkProps> = ({ className, url }) => (\n    <a\n        className={ className || 'cart-header-link' }\n        data-test=\"cart-edit-link\"\n        href={ url }\n        id=\"cart-edit-link\"\n        target=\"_top\"\n    >\n        <TranslatedString id=\"cart.edit_cart_action\" />\n    </a>\n);\n\nexport default memo(EditLink);\n","import { Coupon } from '@bigcommerce/checkout-sdk';\nimport React, { memo, FunctionComponent } from 'react';\n\nimport { TranslatedString } from '../locale';\n\nexport interface AppliedCouponProps {\n    coupon: Coupon;\n}\n\nconst AppliedCoupon: FunctionComponent<AppliedCouponProps> = ({ coupon }) => (\n    <div\n        className=\"redeemable-column redeemable-info\"\n        data-test=\"redeemable-item--coupon\"\n    >\n        <span className=\"redeemable-info-header\">\n            <span\n                className=\"redeemable-info-header--highlight\"\n                data-test=\"coupon-amount\"\n            >\n                { coupon.displayName }\n            </span>\n\n            { ' ' }\n\n            <TranslatedString id=\"redeemable.coupon_text\" />\n        </span>\n\n        <span className=\"redeemable-info-subHeader\" data-test=\"coupon-code\">\n            { coupon.code }\n        </span>\n    </div>\n);\n\nexport default memo(AppliedCoupon);\n","import { GiftCertificate } from '@bigcommerce/checkout-sdk';\nimport React, { memo, FunctionComponent } from 'react';\n\nimport { ShopperCurrency } from '../currency';\nimport { TranslatedString } from '../locale';\n\nexport interface AppliedGiftCertificateProps {\n    giftCertificate: GiftCertificate;\n}\n\nconst AppliedGiftCertificate: FunctionComponent<AppliedGiftCertificateProps> = ({ giftCertificate }) => (\n    <div\n        className=\"redeemable-column redeemable-info\"\n        data-test=\"redeemable-item--giftCertificate\"\n    >\n        <span className=\"redeemable-info-header\">\n            <span className=\"redeemable-info-header--highlight\" data-test=\"giftCertificate-amount\">\n                <ShopperCurrency amount={ giftCertificate.used } />\n            </span>\n\n            { ' ' }\n\n            <TranslatedString id=\"redeemable.gift_certificate_text\" />\n        </span>\n\n        <span className=\"redeemable-info-subHeader\">\n            { giftCertificate.remaining > 0 && <span className=\"redeemable-info-subHeader--remaining\">\n                <TranslatedString id=\"redeemable.gift_certificate_remaining_text\" />\n\n                { ' ' }\n\n                <span data-test=\"giftCertificate-remaining\">\n                    <ShopperCurrency amount={ giftCertificate.remaining } />\n                </span>\n            </span> }\n\n            <span data-test=\"giftCertificate-code\">\n                { giftCertificate.code }\n            </span>\n        </span>\n    </div>\n);\n\nexport default memo(AppliedGiftCertificate);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconRemove: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconRemove);\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '../locale';\nimport { IconRemove } from '../ui/icon';\n\nimport './AppliedRedeemable.scss';\n\nexport interface AppliedRedeemableProps {\n    isRemoving: boolean;\n    onRemove(): void;\n}\n\nconst AppliedRedeemable: FunctionComponent<AppliedRedeemableProps> = ({\n    children,\n    isRemoving,\n    onRemove,\n}) => (\n    <div className=\"form-checklist-header\">\n        <div className=\"form-checklist-checkbox optimizedCheckout-form-checklist-checkbox\">\n            <span className=\"is-srOnly\">\n                <TranslatedString id=\"redeemable.applied_text\" />\n            </span>\n        </div>\n\n        <div className=\"form-label form-label-redeemable\">\n            <div className=\"redeemable\">\n                { children }\n                <div className=\"redeemable-column redeemable-actions\">\n                    <button\n                        className={ classNames(\n                            'redeemable-remove',\n                            { 'is-loading': isRemoving }\n                        ) }\n                        data-test=\"redeemable-remove\"\n                        disabled={ isRemoving }\n                        onClick={ onRemove }\n                        type=\"button\"\n                    >\n                        <IconRemove />\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nexport default AppliedRedeemable;\n","import { Coupon, GiftCertificate } from '@bigcommerce/checkout-sdk';\nimport React, { memo, useCallback, FunctionComponent } from 'react';\n\nimport { AppliedCoupon } from '../coupon';\nimport { AppliedGiftCertificate } from '../giftCertificate';\n\nimport AppliedRedeemable from './AppliedRedeemable';\n\ninterface AppliedCouponProps {\n    coupon: Coupon;\n    isRemoving?: boolean;\n    onRemoved(code: string): void;\n}\n\nconst AppliedCouponChecklistItem: FunctionComponent<AppliedCouponProps> = ({\n    coupon,\n    onRemoved,\n    isRemoving = false,\n}) => {\n    const handleRemove = useCallback(() => {\n        onRemoved(coupon.code);\n    }, [\n        coupon,\n        onRemoved,\n    ]);\n\n    return (\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\n            <AppliedRedeemable\n                isRemoving={ isRemoving }\n                onRemove={ handleRemove }\n            >\n                <AppliedCoupon coupon={ coupon } />\n            </AppliedRedeemable>\n        </li>\n    );\n};\n\ninterface AppliedGiftCertificateProps {\n    giftCertificate: GiftCertificate;\n    isRemoving?: boolean;\n    onRemoved(code: string): void;\n}\n\nconst AppliedGiftCertificateChecklistItem: FunctionComponent<AppliedGiftCertificateProps> = ({\n    giftCertificate,\n    onRemoved,\n    isRemoving = false,\n}) => {\n    const handleRemove = useCallback(() => {\n        onRemoved(giftCertificate.code);\n    }, [\n        giftCertificate,\n        onRemoved,\n    ]);\n\n    return (\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\n            <AppliedRedeemable\n                isRemoving={ isRemoving }\n                onRemove={ handleRemove }\n            >\n                <AppliedGiftCertificate giftCertificate={ giftCertificate } />\n            </AppliedRedeemable>\n        </li>\n    );\n};\n\nexport interface AppliedRedeemablesProps {\n    coupons?: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    isRemovingGiftCertificate?: boolean;\n    isRemovingCoupon?: boolean;\n    onRemovedCoupon(code: string): void;\n    onRemovedGiftCertificate(code: string): void;\n}\n\nconst AppliedRedeemables: FunctionComponent<AppliedRedeemablesProps> = ({\n    coupons = [],\n    giftCertificates = [],\n    isRemovingCoupon = false,\n    isRemovingGiftCertificate = false,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n}) => {\n    if (!coupons.length && !giftCertificates.length) {\n        return null;\n    }\n\n    return (\n        <ul className=\"form-checklist optimizedCheckout-form-checklist\" data-test=\"redeemables-list\">\n            { coupons.map(coupon => (\n                <AppliedCouponChecklistItem\n                    coupon={ coupon }\n                    isRemoving={ isRemovingCoupon }\n                    key={ coupon.code }\n                    onRemoved={ onRemovedCoupon }\n                />\n            )) }\n\n            { giftCertificates.map(giftCertificate => (\n                <AppliedGiftCertificateChecklistItem\n                    giftCertificate={ giftCertificate }\n                    isRemoving={ isRemovingGiftCertificate }\n                    key={ giftCertificate.code }\n                    onRemoved={ onRemovedGiftCertificate }\n                />\n            )) }\n        </ul>\n    );\n};\n\nexport default memo(AppliedRedeemables);\n","import { CheckoutSelectors, RequestError } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport { withFormik, FieldProps, FormikProps } from 'formik';\nimport { noop } from 'lodash';\nimport React, { memo, useCallback, Fragment, FunctionComponent, KeyboardEvent } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '../common/dom';\nimport { withLanguage, TranslatedString, WithLanguageProps } from '../locale';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { FormContextType, FormField, FormProvider, Label, TextInput } from '../ui/form';\nimport { Toggle } from '../ui/toggle';\n\nimport AppliedRedeemables, { AppliedRedeemablesProps } from './AppliedRedeemables';\n\nexport interface RedeemableFormValues {\n    redeemableCode: string;\n}\n\nexport type ReedemableChildrenProps = Pick<RedeemableProps,\n    'onRemovedCoupon' |\n    'onRemovedGiftCertificate' |\n    'isRemovingGiftCertificate' |\n    'isRemovingCoupon' |\n    'coupons' |\n    'giftCertificates'\n>;\n\nexport type RedeemableProps = {\n    appliedRedeemableError?: RequestError;\n    isApplyingRedeemable?: boolean;\n    isRemovingRedeemable?: boolean;\n    removedRedeemableError?: RequestError;\n    showAppliedRedeemables?: boolean;\n    shouldCollapseCouponCode?: boolean;\n    applyCoupon(code: string): Promise<CheckoutSelectors>;\n    applyGiftCertificate(code: string): Promise<CheckoutSelectors>;\n    clearError(error: Error): void;\n} & AppliedRedeemablesProps;\n\nconst Redeemable: FunctionComponent<RedeemableProps & WithLanguageProps & FormikProps<RedeemableFormValues>> = ({\n    shouldCollapseCouponCode,\n    showAppliedRedeemables,\n    ...formProps\n}) => (\n    <Toggle openByDefault={ !shouldCollapseCouponCode }>\n        { ({ toggle, isOpen }) => (\n            <Fragment>\n                { shouldCollapseCouponCode && <a\n                    className=\"redeemable-label\"\n                    data-test=\"redeemable-label\"\n                    href=\"#\"\n                    onClick={ preventDefault(toggle) }\n                >\n                    <TranslatedString id=\"redeemable.toggle_action\" />\n                </a> }\n                { !shouldCollapseCouponCode && <div className=\"redeemable-label\">\n                    <TranslatedString id=\"redeemable.toggle_action\" />\n                </div> }\n                { (isOpen || !shouldCollapseCouponCode) && <div data-test=\"redeemable-collapsable\">\n                    <RedeemableForm { ...formProps } />\n                    { showAppliedRedeemables &&\n                        <AppliedRedeemables { ...formProps } /> }\n                </div> }\n            </Fragment>\n        ) }\n    </Toggle>\n);\n\nconst RedeemableForm: FunctionComponent<Partial<RedeemableProps> & FormikProps<RedeemableFormValues> & WithLanguageProps> = ({\n    appliedRedeemableError,\n    isApplyingRedeemable,\n    clearError = noop,\n    submitForm,\n    language,\n}) => {\n    const handleKeyDown = useCallback(memoizeOne((setSubmitted: FormContextType['setSubmitted']) => (\n        (event: KeyboardEvent) => {\n            if (appliedRedeemableError) {\n                clearError(appliedRedeemableError);\n            }\n\n            // note: to prevent submitting main form, we manually intercept\n            // the enter key event and submit the \"subform\".\n            if (event.keyCode === 13) {\n                setSubmitted(true);\n                submitForm();\n                event.preventDefault();\n            }\n        }\n    )), [\n        appliedRedeemableError,\n        clearError,\n        submitForm,\n    ]);\n\n    const handleSubmit = useCallback(memoizeOne((setSubmitted: FormContextType['setSubmitted']) => (\n        () => {\n            setSubmitted(true);\n            submitForm();\n        }\n    )), []);\n\n    const renderLabel = useCallback((name: string) => (\n        <Label hidden htmlFor={ name }>\n            <TranslatedString id=\"redeemable.code_label\" />\n        </Label>\n    ), []);\n\n    const renderErrorMessage = useCallback((errorCode: string) => {\n        switch (errorCode) {\n        case 'min_purchase':\n            return <TranslatedString id=\"redeemable.coupon_min_order_total\" />;\n        case 'not_applicable':\n            return <TranslatedString id=\"redeemable.coupon_location_error\" />;\n        default:\n            return <TranslatedString id=\"redeemable.code_invalid_error\" />;\n        }\n    }, []);\n\n    const renderInput = useCallback((setSubmitted: FormContextType['setSubmitted']) => ({ field }: FieldProps) => (\n        <Fragment>\n            { appliedRedeemableError && appliedRedeemableError.errors && appliedRedeemableError.errors[0] &&\n                <Alert type={ AlertType.Error }>\n                    { renderErrorMessage(appliedRedeemableError.errors[0].code) }\n                </Alert> }\n\n            <div className=\"form-prefixPostfix\">\n                <TextInput\n                    { ...field }\n                    aria-label={ language.translate('redeemable.code_label') }\n                    className=\"form-input optimizedCheckout-form-input\"\n                    onKeyDown={ handleKeyDown(setSubmitted) }\n                    testId=\"redeemableEntry-input\"\n                />\n\n                <Button\n                    className=\"form-prefixPostfix-button--postfix\"\n                    id=\"applyRedeemableButton\"\n                    isLoading={ isApplyingRedeemable }\n                    onClick={ handleSubmit(setSubmitted) }\n                    testId=\"redeemableEntry-submit\"\n                    variant={ ButtonVariant.Secondary }\n                >\n                    <TranslatedString id=\"redeemable.apply_action\" />\n                </Button>\n            </div>\n        </Fragment>\n    ), [appliedRedeemableError, handleKeyDown, handleSubmit, isApplyingRedeemable, language, renderErrorMessage]);\n\n    const renderContent = useCallback(memoizeOne(({ setSubmitted }: FormContextType) => (\n        <FormField\n            input={ renderInput(setSubmitted) }\n            label={ renderLabel }\n            name=\"redeemableCode\"\n        />\n    )), [\n        renderLabel,\n        renderInput,\n    ]);\n\n    return <fieldset className=\"form-fieldset redeemable-entry\">\n        <FormProvider>\n            { renderContent }\n        </FormProvider>\n    </fieldset>;\n};\n\nexport default withLanguage(withFormik<RedeemableProps & WithLanguageProps, RedeemableFormValues>({\n    mapPropsToValues() {\n        return {\n            redeemableCode: '',\n        };\n    },\n\n    async handleSubmit({ redeemableCode }, { props: { applyCoupon, applyGiftCertificate, clearError } }) {\n        const code = redeemableCode.trim();\n\n        try {\n            await applyGiftCertificate(code);\n        } catch (error) {\n            clearError(error);\n            applyCoupon(code);\n        }\n    },\n\n    validationSchema({ language }: RedeemableProps & WithLanguageProps) {\n        return object({\n            redeemableCode: string()\n                .required(language.translate('redeemable.code_required_error')),\n        });\n    },\n})(memo(Redeemable)));\n","import { CheckoutContextProps } from '../checkout';\n\nimport mapToRedeemableProps from './mapToRedeemableProps';\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\n\nexport default function mapToCartSummaryProps(\n    context: CheckoutContextProps\n): WithCheckoutCartSummaryProps | null {\n    const {\n        checkoutState: {\n            data: { getConfig, getCustomer, getCheckout },\n        },\n    } = context;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n    const customer = getCustomer();\n    const redeemableProps = mapToRedeemableProps(context);\n\n    if (!checkout || !config || !redeemableProps || !customer) {\n        return null;\n    }\n\n    const { isStoreCreditApplied, grandTotal } = checkout;\n    const { storeCredit } = customer;\n\n    return {\n        checkout,\n        shopperCurrency: config.shopperCurrency,\n        cartUrl: config.links.cartLink,\n        storeCurrency: config.currency,\n        storeCreditAmount: isStoreCreditApplied ? Math.min(grandTotal, storeCredit) : undefined,\n        ...redeemableProps,\n    };\n}\n","import { CheckoutContextProps } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nimport { RedeemableProps } from './Redeemable';\n\nexport default function mapToRedeemableProps(\n    context: CheckoutContextProps\n): RedeemableProps | null {\n    const {\n        checkoutService,\n        checkoutState: {\n            data: {\n                getConfig,\n                getCoupons,\n                getGiftCertificates,\n            },\n            statuses: {\n                isApplyingCoupon,\n                isApplyingGiftCertificate,\n                isRemovingCoupon,\n                isRemovingGiftCertificate,\n            },\n            errors: {\n                getApplyCouponError,\n                getApplyGiftCertificateError,\n                getRemoveCouponError,\n                getRemoveGiftCertificateError,\n            },\n        },\n    } = context;\n\n    const config = getConfig();\n\n    if (!config) {\n        return null;\n    }\n\n    return {\n        appliedRedeemableError: getApplyCouponError() || getApplyGiftCertificateError(),\n        applyCoupon: checkoutService.applyCoupon,\n        applyGiftCertificate: checkoutService.applyGiftCertificate,\n        clearError: checkoutService.clearError,\n        coupons: getCoupons() || EMPTY_ARRAY,\n        giftCertificates: getGiftCertificates() || EMPTY_ARRAY,\n        isApplyingRedeemable: (isApplyingCoupon() || isApplyingGiftCertificate()),\n        isRemovingCoupon: isRemovingCoupon(),\n        isRemovingGiftCertificate: isRemovingGiftCertificate(),\n        onRemovedCoupon: checkoutService.removeCoupon,\n        onRemovedGiftCertificate: checkoutService.removeGiftCertificate,\n        removedRedeemableError: (getRemoveCouponError() || getRemoveGiftCertificateError()),\n        shouldCollapseCouponCode: config.checkoutSettings.isCouponCodeCollapsed,\n    };\n}\n","import React, { ComponentType, FunctionComponent } from 'react';\n\nimport { OrderSummaryProps, OrderSummarySubtotalsProps } from '../order';\n\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport Redeemable from './Redeemable';\n\nexport default function withRedeemable(\n    OriginalComponent: ComponentType<OrderSummaryProps & OrderSummarySubtotalsProps>\n): FunctionComponent<\n    WithCheckoutCartSummaryProps &\n    { headerLink?: any }\n> {\n    return props => {\n        const {\n            checkout,\n            storeCurrency,\n            shopperCurrency,\n            headerLink,\n            onRemovedCoupon,\n            onRemovedGiftCertificate,\n            storeCreditAmount,\n            ...redeemableProps\n        } = props;\n\n        return (\n            <OriginalComponent\n                { ...mapToOrderSummarySubtotalsProps(checkout) }\n                additionalLineItems={\n                    <Redeemable { ...{\n                        ...redeemableProps,\n                        onRemovedCoupon,\n                        onRemovedGiftCertificate,\n                    } }\n                    />\n                }\n                headerLink={ headerLink }\n                lineItems={ checkout.cart.lineItems }\n                onRemovedCoupon={ onRemovedCoupon }\n                onRemovedGiftCertificate={ onRemovedGiftCertificate }\n                shopperCurrency={ shopperCurrency }\n                storeCreditAmount={ storeCreditAmount }\n                storeCurrency={ storeCurrency }\n                total={ checkout.outstandingBalance }\n            />\n        );\n    };\n}\n","import { Checkout } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummarySubtotalsProps } from '../order';\nimport { hasSelectedShippingOptions } from '../shipping';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    subtotal,\n    cart: { discountAmount },\n    giftCertificates,\n    consignments,\n    handlingCostTotal,\n    shippingCostBeforeDiscount,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n}: Checkout): OrderSummarySubtotalsProps {\n    return {\n        subtotalAmount: subtotal,\n        discountAmount,\n        giftCertificates,\n        giftWrappingAmount: giftWrappingCostTotal,\n        shippingAmount: hasSelectedShippingOptions(consignments) ?\n            shippingCostBeforeDiscount :\n            undefined,\n        handlingAmount: handlingCostTotal,\n        coupons,\n        taxes,\n    };\n}\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getLineItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    return physicalItems.length +\n        digitalItems.length +\n        giftCertificates.length +\n        (customItems || []).length;\n}\n","import { LineItemMap, ShopperCurrency as ShopperCurrencyType, StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport React, { Fragment, FunctionComponent, ReactNode } from 'react';\n\nimport { preventDefault } from '../common/dom';\nimport { TranslatedString } from '../locale';\nimport { IconClose } from '../ui/icon';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\n\nexport interface OrderSummaryDrawerProps {\n    additionalLineItems?: ReactNode;\n    lineItems: LineItemMap;\n    total: number;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    isOpen: boolean;\n    headerLink?: ReactNode;\n    onRequestClose?(): void;\n    onAfterOpen?(): void;\n}\n\nconst OrderSummaryModal: FunctionComponent<OrderSummaryDrawerProps & OrderSummarySubtotalsProps> = ({\n    additionalLineItems,\n    children,\n    onRequestClose,\n    onAfterOpen,\n    storeCurrency,\n    shopperCurrency,\n    isOpen,\n    headerLink,\n    lineItems,\n    total,\n    ...orderSummarySubtotalsProps\n}) => (\n<Modal\n    additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\n    additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary\"\n    header={ renderHeader({ headerLink, onRequestClose }) }\n    isOpen={ isOpen }\n    onAfterOpen={ onAfterOpen }\n    onRequestClose={ onRequestClose }\n>\n    <OrderSummarySection>\n        <OrderSummaryItems items={ lineItems } />\n    </OrderSummarySection>\n    <OrderSummarySection>\n        <OrderSummarySubtotals\n            { ...orderSummarySubtotalsProps }\n        />\n        { additionalLineItems }\n    </OrderSummarySection>\n    <OrderSummarySection>\n        <OrderSummaryTotal\n            orderAmount={ total }\n            shopperCurrencyCode={ shopperCurrency.code }\n            storeCurrencyCode={ storeCurrency.code }\n        />\n    </OrderSummarySection>\n</Modal>\n);\n\nconst renderHeader: FunctionComponent<{\n    headerLink: ReactNode;\n    onRequestClose?(): void;\n}> = ({\n    onRequestClose,\n    headerLink,\n}) => (<Fragment>\n    <a\n        className=\"cart-modal-close\"\n        href=\"#\"\n        onClick={ preventDefault(onRequestClose) }\n    >\n        <span className=\"is-srOnly\">\n            <TranslatedString id=\"common.close_action\" />\n        </span>\n        <IconClose />\n    </a>\n    <ModalHeader additionalClassName=\"cart-modal-title\">\n        <TranslatedString id=\"cart.cart_heading\" />\n    </ModalHeader>\n\n    { headerLink }\n</Fragment>);\n\nexport default OrderSummaryModal;\n","import { LineItemMap, ShopperCurrency as ShopperCurrencyType, StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { memo, useCallback, FunctionComponent, ReactNode } from 'react';\n\nimport { ShopperCurrency } from '../currency';\nimport { TranslatedString } from '../locale';\nimport { IconGiftCertificate } from '../ui/icon';\nimport { ModalTrigger } from '../ui/modal';\n\nimport getItemsCount from './getItemsCount';\nimport getLineItemsCount from './getLineItemsCount';\nimport OrderSummaryModal from './OrderSummaryModal';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport interface OrderSummaryDrawerProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummaryDrawer: FunctionComponent<OrderSummaryDrawerProps & OrderSummarySubtotalsProps> = ({\n    additionalLineItems,\n    coupons,\n    discountAmount,\n    giftCertificates,\n    handlingAmount,\n    headerLink,\n    lineItems,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n    shippingAmount,\n    shopperCurrency,\n    storeCreditAmount,\n    giftWrappingAmount,\n    storeCurrency,\n    subtotalAmount,\n    taxes,\n    total,\n}) => {\n    const renderModal = useCallback(props => (\n        <OrderSummaryModal\n            { ...props }\n            additionalLineItems={ additionalLineItems }\n            coupons={ coupons }\n            discountAmount={ discountAmount }\n            giftCertificates={ giftCertificates }\n            giftWrappingAmount={  giftWrappingAmount }\n            handlingAmount={ handlingAmount }\n            headerLink={ headerLink }\n            lineItems={ lineItems }\n            onRemovedCoupon={ onRemovedCoupon }\n            onRemovedGiftCertificate={ onRemovedGiftCertificate }\n            shippingAmount={ shippingAmount }\n            shopperCurrency={ shopperCurrency }\n            storeCreditAmount={ storeCreditAmount }\n            storeCurrency={ storeCurrency }\n            subtotalAmount={ subtotalAmount }\n            taxes={ taxes }\n            total={ total }\n        />\n    ), [\n        additionalLineItems,\n        coupons,\n        discountAmount,\n        giftCertificates,\n        handlingAmount,\n        headerLink,\n        lineItems,\n        onRemovedCoupon,\n        onRemovedGiftCertificate,\n        giftWrappingAmount,\n        shippingAmount,\n        shopperCurrency,\n        storeCreditAmount,\n        storeCurrency,\n        subtotalAmount,\n        taxes,\n        total,\n    ]);\n\n    return <ModalTrigger modal={ renderModal }>\n        { ({ onClick, onKeyPress }) => <div\n            className=\"cartDrawer optimizedCheckout-orderSummary\"\n            onClick={ onClick }\n            onKeyPress= { onKeyPress }\n            tabIndex= { 0 }\n        >\n            <figure\n                className={ classNames(\n                    'cartDrawer-figure',\n                    { 'cartDrawer-figure--stack': getLineItemsCount(lineItems) > 1 }\n                ) }\n            >\n                <div className=\"cartDrawer-imageWrapper\">\n                    { getImage(lineItems) }\n                </div>\n            </figure>\n            <div className=\"cartDrawer-body\">\n                <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\n                    <TranslatedString\n                        data={ { count: getItemsCount(lineItems) } }\n                        id=\"cart.item_count_text\"\n                    />\n                </h3>\n                <a>\n                    <TranslatedString id=\"cart.show_details_action\" />\n                </a>\n            </div>\n            <div className=\"cartDrawer-actions\">\n                <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\n                    <ShopperCurrency amount={ total } />\n                </h3>\n            </div>\n        </div> }\n    </ModalTrigger>;\n};\n\nfunction getImage(lineItems: LineItemMap): ReactNode {\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\n\n    if (productWithImage && productWithImage.imageUrl) {\n        return <img\n            alt={ productWithImage.name }\n            data-test=\"cart-item-image\"\n            src={ productWithImage.imageUrl }\n        />;\n    }\n\n    if (lineItems.giftCertificates.length) {\n        return <IconGiftCertificate />;\n    }\n}\n\nexport default memo(OrderSummaryDrawer);\n","import React, { Component, Fragment, KeyboardEvent, KeyboardEventHandler, MouseEventHandler, ReactNode } from 'react';\n\nexport interface ModalTriggerProps {\n    children(props: { onClick: MouseEventHandler; onKeyPress: KeyboardEventHandler}): ReactNode;\n    modal(props: ModalTriggerModalProps): ReactNode;\n}\n\nexport interface ModalTriggerModalProps {\n    isOpen: boolean;\n    onRequestClose(): void;\n}\n\nexport interface ModalTriggerState {\n    isOpen: boolean;\n}\n\nexport default class ModalTrigger extends Component<ModalTriggerProps, ModalTriggerState> {\n    state = {\n        isOpen: false,\n    };\n\n    private canHandleEvent: boolean = false;\n\n    componentDidMount(): void {\n        this.canHandleEvent = true;\n    }\n\n    componentWillUnmount(): void {\n        this.canHandleEvent = false;\n    }\n\n    render() {\n        const { children, modal } = this.props;\n        const { isOpen } = this.state;\n\n        return (\n            <Fragment>\n                { children({\n                    onClick: this.handleOpen,\n                    onKeyPress: this.handleKeyOpen,\n                }) }\n\n                { modal({\n                    isOpen,\n                    onRequestClose: this.handleClose,\n                }) }\n            </Fragment>\n        );\n    }\n\n    private handleOpen: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: true,\n        });\n    };\n\n    private handleClose: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: false,\n        });\n    };\n\n    private handleKeyOpen: (keyboardEvent: KeyboardEvent<HTMLElement>) => void = keyboardEvent => {\n        if (keyboardEvent.key === 'Enter') {\n            this.handleOpen();\n        }\n    };\n}\n"],"names":["memo","cartUrl","props","headerLink","className","url","href","id","target","coupon","displayName","TranslatedString","code","giftCertificate","ShopperCurrency","amount","used","remaining","height","viewBox","width","xmlns","d","children","isRemoving","onRemove","disabled","onClick","type","AppliedCouponChecklistItem","onRemoved","handleRemove","useCallback","AppliedGiftCertificateChecklistItem","coupons","giftCertificates","isRemovingCoupon","isRemovingGiftCertificate","onRemovedCoupon","onRemovedGiftCertificate","length","map","key","RedeemableForm","appliedRedeemableError","isApplyingRedeemable","clearError","noop","submitForm","language","handleKeyDown","memoizeOne","setSubmitted","event","keyCode","preventDefault","handleSubmit","renderLabel","name","Label","hidden","htmlFor","renderErrorMessage","errorCode","renderInput","field","Fragment","errors","Alert","TextInput","translate","onKeyDown","testId","Button","isLoading","variant","renderContent","FormField","input","label","FormProvider","withLanguage","withFormik","mapPropsToValues","redeemableCode","applyCoupon","applyGiftCertificate","trim","validationSchema","required","shouldCollapseCouponCode","showAppliedRedeemables","formProps","Toggle","openByDefault","toggle","isOpen","mapToCartSummaryProps","context","getConfig","getCustomer","checkout","getCheckout","config","customer","redeemableProps","isStoreCreditApplied","grandTotal","storeCredit","shopperCurrency","links","cartLink","storeCurrency","currency","storeCreditAmount","Math","min","undefined","mapToRedeemableProps","checkoutService","data","getCoupons","getGiftCertificates","statuses","isApplyingCoupon","isApplyingGiftCertificate","getApplyCouponError","getApplyGiftCertificateError","getRemoveCouponError","getRemoveGiftCertificateError","removeCoupon","removeGiftCertificate","removedRedeemableError","checkoutSettings","isCouponCodeCollapsed","withRedeemable","OriginalComponent","subtotal","discountAmount","consignments","handlingCostTotal","shippingCostBeforeDiscount","giftWrappingCostTotal","taxes","subtotalAmount","giftWrappingAmount","shippingAmount","hasSelectedShippingOptions","handlingAmount","additionalLineItems","Redeemable","lineItems","cart","total","outstandingBalance","getLineItemsCount","physicalItems","digitalItems","customItems","renderHeader","onRequestClose","IconClose","ModalHeader","additionalClassName","onAfterOpen","orderSummarySubtotalsProps","Modal","additionalBodyClassName","additionalHeaderClassName","header","OrderSummarySection","OrderSummaryItems","items","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","storeCurrencyCode","renderModal","ModalTrigger","modal","onKeyPress","tabIndex","productWithImage","imageUrl","alt","src","IconGiftCertificate","getImage","count","getItemsCount","state","canHandleEvent","handleOpen","setState","handleClose","handleKeyOpen","keyboardEvent","componentDidMount","this","componentWillUnmount","render","Component"],"sourceRoot":""}