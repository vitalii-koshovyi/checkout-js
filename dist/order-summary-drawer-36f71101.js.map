{"version":3,"file":"order-summary-drawer-36f71101.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/order/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/order/OrderSummaryModal.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDrawer.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalTrigger.tsx"],"sourcesContent":["import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getLineItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    return physicalItems.length +\n        digitalItems.length +\n        giftCertificates.length +\n        (customItems || []).length;\n}\n","import { LineItemMap, ShopperCurrency as ShopperCurrencyType, StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport React, { Fragment, FunctionComponent, ReactNode } from 'react';\n\nimport { preventDefault } from '../common/dom';\nimport { TranslatedString } from '../locale';\nimport { IconClose } from '../ui/icon';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\n\nexport interface OrderSummaryDrawerProps {\n    additionalLineItems?: ReactNode;\n    lineItems: LineItemMap;\n    total: number;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    isOpen: boolean;\n    headerLink?: ReactNode;\n    onRequestClose?(): void;\n    onAfterOpen?(): void;\n}\n\nconst OrderSummaryModal: FunctionComponent<OrderSummaryDrawerProps & OrderSummarySubtotalsProps> = ({\n    additionalLineItems,\n    children,\n    onRequestClose,\n    onAfterOpen,\n    storeCurrency,\n    shopperCurrency,\n    isOpen,\n    headerLink,\n    lineItems,\n    total,\n    ...orderSummarySubtotalsProps\n}) => (\n<Modal\n    additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\n    additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary\"\n    header={ renderHeader({ headerLink, onRequestClose }) }\n    isOpen={ isOpen }\n    onAfterOpen={ onAfterOpen }\n    onRequestClose={ onRequestClose }\n>\n    <OrderSummarySection>\n        <OrderSummaryItems items={ lineItems } />\n    </OrderSummarySection>\n    <OrderSummarySection>\n        <OrderSummarySubtotals\n            { ...orderSummarySubtotalsProps }\n        />\n        { additionalLineItems }\n    </OrderSummarySection>\n    <OrderSummarySection>\n        <OrderSummaryTotal\n            orderAmount={ total }\n            shopperCurrencyCode={ shopperCurrency.code }\n            storeCurrencyCode={ storeCurrency.code }\n        />\n    </OrderSummarySection>\n</Modal>\n);\n\nconst renderHeader: FunctionComponent<{\n    headerLink: ReactNode;\n    onRequestClose?(): void;\n}> = ({\n    onRequestClose,\n    headerLink,\n}) => (<Fragment>\n    <a\n        className=\"cart-modal-close\"\n        href=\"#\"\n        onClick={ preventDefault(onRequestClose) }\n    >\n        <span className=\"is-srOnly\">\n            <TranslatedString id=\"common.close_action\" />\n        </span>\n        <IconClose />\n    </a>\n    <ModalHeader additionalClassName=\"cart-modal-title\">\n        <TranslatedString id=\"cart.cart_heading\" />\n    </ModalHeader>\n\n    { headerLink }\n</Fragment>);\n\nexport default OrderSummaryModal;\n","import { LineItemMap, ShopperCurrency as ShopperCurrencyType, StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { memo, useCallback, FunctionComponent, ReactNode } from 'react';\n\nimport { ShopperCurrency } from '../currency';\nimport { TranslatedString } from '../locale';\nimport { IconGiftCertificate } from '../ui/icon';\nimport { ModalTrigger } from '../ui/modal';\n\nimport getItemsCount from './getItemsCount';\nimport getLineItemsCount from './getLineItemsCount';\nimport OrderSummaryModal from './OrderSummaryModal';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport interface OrderSummaryDrawerProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummaryDrawer: FunctionComponent<OrderSummaryDrawerProps & OrderSummarySubtotalsProps> = ({\n    additionalLineItems,\n    coupons,\n    discountAmount,\n    giftCertificates,\n    handlingAmount,\n    headerLink,\n    lineItems,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n    shippingAmount,\n    shopperCurrency,\n    storeCreditAmount,\n    giftWrappingAmount,\n    storeCurrency,\n    subtotalAmount,\n    taxes,\n    total,\n}) => {\n    const renderModal = useCallback(props => (\n        <OrderSummaryModal\n            { ...props }\n            additionalLineItems={ additionalLineItems }\n            coupons={ coupons }\n            discountAmount={ discountAmount }\n            giftCertificates={ giftCertificates }\n            giftWrappingAmount={  giftWrappingAmount }\n            handlingAmount={ handlingAmount }\n            headerLink={ headerLink }\n            lineItems={ lineItems }\n            onRemovedCoupon={ onRemovedCoupon }\n            onRemovedGiftCertificate={ onRemovedGiftCertificate }\n            shippingAmount={ shippingAmount }\n            shopperCurrency={ shopperCurrency }\n            storeCreditAmount={ storeCreditAmount }\n            storeCurrency={ storeCurrency }\n            subtotalAmount={ subtotalAmount }\n            taxes={ taxes }\n            total={ total }\n        />\n    ), [\n        additionalLineItems,\n        coupons,\n        discountAmount,\n        giftCertificates,\n        handlingAmount,\n        headerLink,\n        lineItems,\n        onRemovedCoupon,\n        onRemovedGiftCertificate,\n        giftWrappingAmount,\n        shippingAmount,\n        shopperCurrency,\n        storeCreditAmount,\n        storeCurrency,\n        subtotalAmount,\n        taxes,\n        total,\n    ]);\n\n    return <ModalTrigger modal={ renderModal }>\n        { ({ onClick, onKeyPress }) => <div\n            className=\"cartDrawer optimizedCheckout-orderSummary\"\n            onClick={ onClick }\n            onKeyPress= { onKeyPress }\n            tabIndex= { 0 }\n        >\n            <figure\n                className={ classNames(\n                    'cartDrawer-figure',\n                    { 'cartDrawer-figure--stack': getLineItemsCount(lineItems) > 1 }\n                ) }\n            >\n                <div className=\"cartDrawer-imageWrapper\">\n                    { getImage(lineItems) }\n                </div>\n            </figure>\n            <div className=\"cartDrawer-body\">\n                <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\n                    <TranslatedString\n                        data={ { count: getItemsCount(lineItems) } }\n                        id=\"cart.item_count_text\"\n                    />\n                </h3>\n                <a>\n                    <TranslatedString id=\"cart.show_details_action\" />\n                </a>\n            </div>\n            <div className=\"cartDrawer-actions\">\n                <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\n                    <ShopperCurrency amount={ total } />\n                </h3>\n            </div>\n        </div> }\n    </ModalTrigger>;\n};\n\nfunction getImage(lineItems: LineItemMap): ReactNode {\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\n\n    if (productWithImage && productWithImage.imageUrl) {\n        return <img\n            alt={ productWithImage.name }\n            data-test=\"cart-item-image\"\n            src={ productWithImage.imageUrl }\n        />;\n    }\n\n    if (lineItems.giftCertificates.length) {\n        return <IconGiftCertificate />;\n    }\n}\n\nexport default memo(OrderSummaryDrawer);\n","import React, { Component, Fragment, KeyboardEvent, KeyboardEventHandler, MouseEventHandler, ReactNode } from 'react';\n\nexport interface ModalTriggerProps {\n    children(props: { onClick: MouseEventHandler; onKeyPress: KeyboardEventHandler}): ReactNode;\n    modal(props: ModalTriggerModalProps): ReactNode;\n}\n\nexport interface ModalTriggerModalProps {\n    isOpen: boolean;\n    onRequestClose(): void;\n}\n\nexport interface ModalTriggerState {\n    isOpen: boolean;\n}\n\nexport default class ModalTrigger extends Component<ModalTriggerProps, ModalTriggerState> {\n    state = {\n        isOpen: false,\n    };\n\n    private canHandleEvent: boolean = false;\n\n    componentDidMount(): void {\n        this.canHandleEvent = true;\n    }\n\n    componentWillUnmount(): void {\n        this.canHandleEvent = false;\n    }\n\n    render() {\n        const { children, modal } = this.props;\n        const { isOpen } = this.state;\n\n        return (\n            <Fragment>\n                { children({\n                    onClick: this.handleOpen,\n                    onKeyPress: this.handleKeyOpen,\n                }) }\n\n                { modal({\n                    isOpen,\n                    onRequestClose: this.handleClose,\n                }) }\n            </Fragment>\n        );\n    }\n\n    private handleOpen: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: true,\n        });\n    };\n\n    private handleClose: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: false,\n        });\n    };\n\n    private handleKeyOpen: (keyboardEvent: KeyboardEvent<HTMLElement>) => void = keyboardEvent => {\n        if (keyboardEvent.key === 'Enter') {\n            this.handleOpen();\n        }\n    };\n}\n"],"names":["getLineItemsCount","physicalItems","digitalItems","giftCertificates","customItems","length","renderHeader","onRequestClose","headerLink","Fragment","className","href","onClick","preventDefault","TranslatedString","id","IconClose","ModalHeader","additionalClassName","additionalLineItems","onAfterOpen","storeCurrency","shopperCurrency","isOpen","lineItems","total","orderSummarySubtotalsProps","Modal","additionalBodyClassName","additionalHeaderClassName","header","OrderSummarySection","OrderSummaryItems","items","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","code","storeCurrencyCode","memo","coupons","discountAmount","handlingAmount","onRemovedCoupon","onRemovedGiftCertificate","shippingAmount","storeCreditAmount","giftWrappingAmount","subtotalAmount","taxes","renderModal","useCallback","props","ModalTrigger","modal","onKeyPress","tabIndex","productWithImage","imageUrl","alt","name","src","IconGiftCertificate","getImage","data","count","getItemsCount","ShopperCurrency","amount","state","canHandleEvent","handleOpen","setState","handleClose","handleKeyOpen","keyboardEvent","key","componentDidMount","this","componentWillUnmount","render","children","Component"],"sourceRoot":""}